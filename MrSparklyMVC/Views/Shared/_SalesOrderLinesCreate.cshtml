@model MrSparklyMVC.Models.SalesOrderLine

@{
}

<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    var $product = $('productDDL');
    $product.on('change', function () {
        $.getJSON('@Url.Action("GetProductPrice","Product")',
                   $product.val,
                   function (price) {
                       $('#price').val(price);
                   });
    });
</script>

<h3>New Item</h3>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SalesOrderLine</legend>

        <!--<div class="editor-label">
            @Html.LabelFor(model => model.salesOrderLinesID)
        </div>-->
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderLinesID, new { @readonly = "readonly", disabled= "disabled" })
            @Html.ValidationMessageFor(model => model.salesOrderLinesID)
        </div>

        <!--<div class="editor-label">
            @Html.LabelFor(model => model.salesOrderID)
        </div>-->
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderID)
            @Html.ValidationMessageFor(model => model.salesOrderID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.productID, "Product")
        </div>
        <div class="editor-field">
            @Html.DropDownList("ProductID", ViewBag.productID as SelectList, new { @class = "productDDL" })
            @Html.ValidationMessageFor(model => model.productID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderItemQty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderItemQty)
            @Html.ValidationMessageFor(model => model.salesOrderItemQty)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderItemPrice)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderItemPrice)
            @Html.ValidationMessageFor(model => model.salesOrderItemPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderLinesSubtotal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderLinesSubtotal)
            @Html.ValidationMessageFor(model => model.salesOrderLinesSubtotal)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Order Details", "Details", "SalesOrders", new { id = Model.salesOrderID }, null)
</div>
