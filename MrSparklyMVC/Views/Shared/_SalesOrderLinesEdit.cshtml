@model MrSparklyMVC.Models.SalesOrderLine

@{
    ViewBag.Title = "Edit";
}
<script>
    var $product = $('#productDDL');

    var updatePrice = function () {
        $url = '../../Product/GetProductPrice/' + $product.val();
        $.getJSON($url,
                   function (price) {
                       //
                       $('#price').val(price);
                   })
        .fail(function () {
            alert("fail");
        });
    }

    updatePrice();

    $product.on('change', updatePrice);
</script>

<h3>Edit Item</h3>

@using (Html.BeginForm("Edit", "SalesOrderLines"))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SalesOrderLine</legend>

        <!--<div class="editor-label">
            @Html.LabelFor(model => model.salesOrderLinesID, "Line ID")
        </div>-->
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderLinesID, new { @readonly = "readonly", disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.salesOrderLinesID)
        </div>

        <!--<div class="editor-label">
            @Html.LabelFor(model => model.salesOrderID, "Order ID")
        </div>-->
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderID, new { @readonly = "readonly", disabled = "disabled" })
            @Html.ValidationMessageFor(model => model.salesOrderID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.productID, "Product")
        </div>
        <div class="editor-field">
            @Html.DropDownList("productID", ViewBag.productID as SelectList, new { @id = "productDDL" })
            @Html.ValidationMessageFor(model => model.productID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderItemQty)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderItemQty)
            @Html.ValidationMessageFor(model => model.salesOrderItemQty)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderItemPrice)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.salesOrderItemPrice, new { @id = "price" })
            @Html.ValidationMessageFor(model => model.salesOrderItemPrice)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.salesOrderLinesSubtotal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.salesOrderLinesSubtotal)
            @Html.ValidationMessageFor(model => model.salesOrderLinesSubtotal)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to Order Details", "Details", "SalesOrders", new { id = Model.salesOrderID }, null)
</div>

@section Scripts {
<script>
var $product = $('productDDL');
$product.change( function() {
     $.getJSON( '@Url.Action("GetProductPrice","Product")',
                $product,
                function(price) {
                    $('#price').val(price);
     });
});

</script>
    @Scripts.Render("~/bundles/jqueryval")
}
